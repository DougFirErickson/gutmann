pro writeInput, fnames, dates, outputfile, thisSceneopenw, oun, outputfile, /getprintf, oun, n_elements(fnames)for i=0, n_elements(fnames) -1 do $	printf, oun, fnames(i)for i=0, n_elements(fnames) -1 do begin	printf, oun, (dates(i)).year, (dates(i)).month, (dates(i)).day	if (dates(i)).month eq -1 then print, 'ERROR with file : ', pwd, fnames(i)endforprintf, oun, 'sand.shp'printf, oun, 'final-'+thisScene+'.shp'printf, oun, ':centoutput:'printf, oun, ':WEATHER_OBSERVATIONS_US:'printf, oun, 'c3c4map4.bsq'close, ounfree_lun, ounendfunction isNum, char	return, byte((byte(char) lt 58 and byte(char) gt 47)(0))endfunction isAlpha, char	return,  byte((byte(char) lt 91 and byte(char) gt 64) or $			(byte(char) lt 123 and byte(char) gt 96)(0))endfunction dateFromName, fname	curString = ''	done = 0	i=0	date={dateStruct, day:0,month:0,year:0}	tmp=0	while not done and i ne strlen(fname) do begin		char=strmid(fname, i, 1)		if isNum(char) then begin			curString = curString+char		endif else begin			reads, curString, tmp			date.day = tmp			done=1		endelse		i=i+1	endwhile		done=0	curString=''	i=i-1			while not done and i ne strlen(fname) do begin		char=strmid(fname, i, 1)		if (isAlpha(char))(0) then begin			curString = curString+char		endif else begin			curString = strlowcase(curString)			if strlen(curString) eq 3 then begin				case curString of					'jan' : date.month=1					'feb' : date.month=2					'mar' : date.month=3					'apr' : date.month=4					'may' : date.month=5					'jun' : date.month=6					'jul' : date.month=7					'aug' : date.month=8					'sep' : date.month=9					'oct' : date.month=10					'nov' : date.month=11					'dec' : date.month=12					else :date.month=-1				endcase			endif else if strlen(curString) eq 4 then begin				case curString of					'janu' : date.month=1					'febr' : date.month=2					'marc' : date.month=3					'apri' : date.month=4					'may' : date.month=5					'june' : date.month=6					'july' : date.month=7					'augu' : date.month=8					'sept' : date.month=9					'octo' : date.month=10					'nove' : date.month=11					'dece' : date.month=12					else :date.month=-1				endcase			endif else begin				print, 'I can not deal with a month name with', strlen(curString),' letters'							print, 'Monthname = ', curString				date.month=-1			endelse			done=1		endelse		i=i+1	endwhile	done=0	curString =''	i=i-1		while not done and i ne strlen(fname) do begin		char=strmid(fname, i, 1)		if isNum(char) then begin			curString = curString+char		endif else begin			reads, curString, tmp			date.year = tmp + 1900			done=1		endelse		i=i+1	endwhile		if i eq strlen(fname) then begin		reads, curString, tmp		date.year = tmp + 1900	endif	return, dateend	pro makeInputFiles	cd, current=main	folderList = findFile('*')	for i=0, n_elements(folderList)-1 do begin		thisFolder = (strsplit(folderList(i), ':', /extract))(0)		if file_test(thisFolder, /Directory) then begin			if isNum(strmid(thisFolder, 0, 1)) then begin				cd, thisFolder				dates={datestruct,day:0,month:0,year:0}				files = ''								list=findfile('*.hdr')				for j=0, n_elements(list)-1 do begin					sep = (strsplit(list(j), '.', /extract))(0)					dates = [dates,datefromname(sep)]					files = [files,sep]				endfor				files=files(1:n_elements(files)-1)				dates=dates(1:n_elements(dates)-1)				print, thisFolder				print, dates, files				writeInput, files, dates, 'ModelInput', thisFolder								cd, main			endif		endif		endforend