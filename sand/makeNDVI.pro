;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Gets envi header info (map and ns, nl, nb, type, interleave);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;function getImageInfo, name	      envi_open_file, name, r_fid=id     if id eq -1 then return, -1     	envi_file_query, id, ns=ns, nl=nl, nb=nb, h_map=maph,	$		interleave=interleave, data_type=type, descrip=desc	handle_value, maph, mapinfo		envi_file_mng, id=id, /remove		return, {fileInfo, ns:ns, nl:nl, nb:nb, map:mapinfo,		$			interleave:interleave, type:type, desc:desc}end;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Sets envi header info (map and ns, nl, nb, type, interleave);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;pro setHdr, info, fname	envi_setup_head, fname, ns=info.ns, nl=info.nl, nb=info.nb, $		interleave=info.interleave, data_type=info.type, $		descrip=info.desc, map=info.map, /writeend	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Creates an NDVI image scaled 0-255 (NDVI lt 0 = 0, NDVI eq 1 = 255);;	and sets up an identical ENVI .hdr for the new file but with one band;;;;	Assumes byte, bsq format and a valid ENVI .hdr;;	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;pro makeNDVI, fname, outname	info=getImageInfo, fname	openr, un, fname, /get	openw, oun, outname, /get 	if info.nb eq 6 or info.nb eq 7 then point_lun, un, (info.ns*info.nl*2)	;skip bands 1&2	b3line = bytarr(info.ns)	b4line = bytarr(info.ns)	for i=0, info.nl-1 do begin		readu, un, b3line		un_pos=fstat(un).cur_ptr		point_lun, un, (un_pos+ (info.ns*info.nl) -info.ns)		readu, un, b4line		point_lun, un, un_pos				ndviLine = fix( (float(b4line)-b3line / b4line+b3line) * 255)		ndviLine(where(ndviLine lt 0)) = 0		ndviLine = byte(ndviLine)				writeu, oun, ndviLine	endfor	close, oun, un & free_lun, oun, un		info.nb = 1	sethdr, info, outnameend