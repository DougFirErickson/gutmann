;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Reads an enviheader file.  ;;	    returns a struct :;;		    ns:number of samples in the file;;		    nl:number of lines in the file;;		    nb:number of bands in the file;;		    map: an envi map structure (includes utm coords and pixelsize);;		    desc: The description field in the .hdr;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;function getFileInfo, name	 envi_open_file, name, r_fid=id	 	 if id eq -1 then return, {errorstruct, name:name, ns:-1, nl:-1, nb:-1}	 envi_file_query, id, nb=nb, nl=nl, ns=ns, h_map=maph, descrip=desc, $	 	interleave=interleave, data_type=type	 if maph eq -1 then return, {errorstruct, name:name, ns:-1, nl:-1, nb:-1}	 	 handle_value, maph, map	 envi_file_mng, id=id, /remove	 return, {imagestruct, name:name, ns:ns, nl:nl, nb:nb, map:map, desc:desc, $	 	interleave:interleave, type:type}end;; designed to plot e^(-25*mean(ndvi)) vs sand transportpro compareNDVIsand		scenes=findfile('*')		cd, current=masterDIR	envistart		sname = 'resizedSand'	nname = 'ndviRS'	dirname='::compare:'		for i=0, n_elements(scenes)-1 do begin		current=strtok(scenes(i),':', /extract)		if (strtok(scenes(i), '.'))(0) eq 0 then begin			if file_test(current(0), /directory) then begin				cd, current(0)				print, ' ', string(byte(13))				print, '**************************',current(0),'**************************'							if file_test(sname) and file_test(nname) then begin					sinfo=getFileInfo(sname)					ninfo=getFileInfo(nname)					if (sinfo.ns ne -1) and (ninfo.ns ne -1) then begin												openr, sun, /get, sname						openr, nun, /get, nname												sdat = fltarr(sinfo.ns, sinfo.nl)						readu, sun, sdat												ndat = bytarr(ninfo.ns, ninfo.nl, ninfo.nb)						readu, nun, ndat												;;converts fullNDVI to mean ndvi						meanNDVI = float(Total(ndat, 3))/ninfo.nb												index = where(sdat ne 0 and meanNDVI ne 0)						print, n_elements(index), '   ', current(0)												if index(0) ne -1 then begin							openw, oun, /get, dirname+current(0)							writeu, oun, long(n_elements(index))							writeu, oun, sdat(index)							writeu, oun, meanNDVI(index)													close, oun							free_lun, oun						endif						close, sun, nun						free_lun, sun, nun											endif				endif else print, 'Could Not find proper files in ', current(0)			endif			cd, masterDIR		endif	endforend