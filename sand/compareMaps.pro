;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Gets envi header info (map and ns, nl, nb, type, interleave);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;function getImageInfo, name	      envi_open_file, name, r_fid=id     if id eq -1 then return, {ns:-1, nl:-1, nb:-1}     	envi_file_query, id, ns=ns, nl=nl, nb=nb, h_map=maph,	$		interleave=interleave, data_type=type, descrip=desc	handle_value, maph, mapinfo		envi_file_mng, id=id, /remove		return, {fileInfo, ns:ns, nl:nl, nb:nb, map:mapinfo,		$			interleave:interleave, type:type, desc:desc}end;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Write the metadata file for combunequal. ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;pro writeCOMBUNEQUALmeta, metafile, fnames	openw, oun, /get, metafile	printf, oun, n_elements(fnames)	for i=0, n_elements(fnames)-1 do begin		printf, oun, fnames(i)	endfor	close, oun	free_lun, oun	end;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	finds the mean deviation between each band in the file and the first band;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;function meanAbsDeviation, filename	MapInfo = getImageInfo(filename)		base = make_array(MapInfo.ns, MapInfo.nl, type=MapInfo.type)	tests = make_array(MapInfo.ns, MapInfo.nl, MapInfo.nb-1, type=MapInfo.type)	openr, un, /get, filename	readu, un, base	readu, un, tests		index = where(base ne 0)	if index(0) eq 0 then return, -1		for i=0, MapInfo.nb-2 do begin		diff = base - tests(*,*,i)		diff = abs(diff)		print, mean(diff(index)), stdev(diff(index)), min(diff(index)), max(diff(index))	endfor	return, -1end;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Read all maps with a basename, and compare them to the 'truth' map;;		first combine all images with combunequal to make sure they are registered;;		compare by subtracting from 'truth', finding mean and stdev of absolute difference;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;pro compareMaps, basename, truth		envistart	if n_elements(basename) eq 0 then $		basename = 'resizedSand'	if n_elements(truth) eq 0 then $		truth = basename		list = findfile(basename+'*')	metafile = 'combSandMeta'	fnames = ''		for i=0, n_elements(list)-1 do begin		tmpname = strsplit(list(i), '.', /extract)		if n_elements(tmpname) gt 1 then begin   ;and tmpname[1] eq 'hdr' 			print, list(i)		endif else fnames = [fnames, list(i)]	endfor	fnames=fnames(1:n_elements(fnames)-1)	writeCOMBUNEQUALmeta, metafile, fnames	combinedFile='FullSand';	combunequal, metafile, combinedFile		MAD = meanAbsDeviation(combinedFile)	print, MADend