;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Gets envi header info (map and ns, nl, nb, type, interleave);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;function getImageInfo, name	      envi_open_file, name, r_fid=id     if id eq -1 then return, -1     	envi_file_query, id, ns=ns, nl=nl, nb=nb, h_map=maph,	$		interleave=interleave, data_type=type, descrip=desc	handle_value, maph, mapinfo		envi_file_mng, id=id, /remove		return, {fileInfo, ns:ns, nl:nl, nb:nb, map:mapinfo,		$			interleave:interleave, type:type, desc:desc}end;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Sets envi header info (map and ns, nl, nb, type, interleave);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;pro setHdr, info, fname	envi_setup_head, fname=fname, ns=info.ns, nl=info.nl, nb=info.nb, $		interleave=info.interleave, data_type=info.type, $		descrip=info.desc, map_info=info.map, /writeend	function makevegmap, class, corr, out, minndvi=minndvi, maxndvi=maxndvi	info=getImageInfo(class)	ns=info.ns	nl=info.nl	openr, un, /get, class	openw, oun, /get, out	line=bytarr(ns);; need to think a little bit more about what this is doing;; could be derived from image stats? bottom 5% and top 5%? (10? 15?)	if not keyword_set(minndvi) then minndvi=0.28	;=ndvi @ 0%cover(0.28)?	typical values	if not keyword_set(maxndvi) then maxndvi=220		;=100/(100% cover(0.73)-0%ndvi(0.28))?;;coeff = 2 columnns, n_classes rows;;	col1 = offset;;	col2 = slope	cols=load_cols(corr, coeff)	if cols eq -1 then return, -1	veg=bytarr((n_elements(coeff)/cols)+1)	veg(1:n_elements(coeff)/cols) = byte(round((coeff(1,*) * 20. + coeff(0,*) - minndvi)*maxndvi))	print, 'Vegetation levels = ', veg	print, 'Coefficients      = ', transpose(coeff)	for i=0, nl-1 do begin		readu, un, line		for j=0, ns-1 do begin			line(j) = veg(line(j))		endfor		writeu, oun, line	endfor	close, oun, un	free_lun, oun, un	setHdr, info, out	return, 1end