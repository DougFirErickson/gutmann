;; '¡' = 161;; '1'-'9' = 49-57;; '.' = 46;; ',' = 44;; ' ' = 32;; '('-')' = 40-41;; '\n' = 13pro rlatlon, fname	!error = 0 & on_ioerror,trouble	openr, un, fname, /get	tmp = string(fname, '.tmp')	openw, oun, tmp, /get	i=0b	curloc = 9b	while not eof(un) do begin		readu, un, i		while i ne 46 and not eof(un) do readu, un, i				;; read in the longitude coordinate		while not (i lt 58 and i gt 47) and not eof(un) do readu, un, i	;find start location		while i ne 161 and not eof(un) do begin			curloc=[[curloc],[i]]										; read ans save value			readu, un, i 		endwhile		if eof(un) then begin			print, 'ERROR : EOF encountered before expected', (fstat(un)).curptr			break		endif		curloc =[[curloc],[9b]]		; add a tab delimeter		;; read in the latitude coordinate				while not (i lt 58 and i gt 47) and not eof(un) do readu, un, i	;find start location		while i ne 161 and not eof(un) do begin			curloc=[[curloc],[i]]										; read and save value			readu, un, i 		endwhile		if eof(un) then begin			print, 'ERROR : EOF encountered before expected', (fstat(un)).curptr			break		endif				curloc = [[curloc(0,1:n_elements(curloc)-1)],[10]]		;;add a carriage return delimeter		writeu, oun, byte(curloc)		curloc = 9b		while not eof(un) and i ne 13 and i ne 41 and i ne 10 do readu, un, i	;move to the end of this line	endwhile	close, oun, un	free_lun, oun, un	cols=load_cols(tmp, data)	if cols ne 2 then begin		print, 'ERROR : incorrect number of columns in file ', tmp, cols		return	endif	outf = string(fname, '.out')	openw, un, outf, /get	writeu, un, data	close, un	free_lun, un	print, data	;	file_delete, tmp		trouble: if (!error ne 0) then print, 'rlatlon ', !error_state	end