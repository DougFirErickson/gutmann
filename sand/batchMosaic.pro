;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Reads an enviheader file.  ;;	    returns a struct :;;		    ns:number of samples in the file;;		    nl:number of lines in the file;;		    nb:number of bands in the file;;		    map: an envi map structure (includes utm coords and pixelsize);;		    desc: The description field in the .hdr;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;function getFileInfo, name	 envi_open_file, name, r_fid=id	 	 if id eq -1 then return, {errorstruct, name:name, ns:-1, nl:-1, nb:-1}	 envi_file_query, id, nb=nb, nl=nl, ns=ns, h_map=maph, descrip=desc, $	 	interleave=interleave, data_type=type	 if maph eq -1 then return, {errorstruct, name:name, ns:-1, nl:-1, nb:-1}	 	 handle_value, maph, map	 envi_file_mng, id=id, /remove	 return, {imagestruct, name:name, ns:ns, nl:nl, nb:nb, map:map, desc:desc, $	 	interleave:interleave, type:type}end;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Sets envi header info (map and ns, nl, nb, type, interleave);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;pro setHdr, info, fname	envi_setup_head, fname=fname, ns=info.ns, nl=info.nl, nb=info.nb, $		interleave=info.interleave, data_type=info.type, $		descrip=info.desc, map_info=info.map, /writeendpro mosaickThese, fids	envi_check_save, /registration	outname = 'FullMap'		x0=lonarr(n_elements(fids))	y0=lonarr(n_elements(fids))	dims=lonarr(5, n_elements(fids))	ymc = 0.	xmc = 9999999999999.	for i=0, n_elements(fids)-1 do begin		thisID = fids(i)		envi_file_query, thisID, ns=ns, nl=nl, data_type=data_type, h_map=maph		handle_value, maph, map		ymc = max([ymc, map.mc(3)])		xmc = min([xmc, map.mc(2)])				dims(*,i) = [-1l,0, ns-1,0,nl-1]	endfor		pos=[0]	pixelsize = map.ps	bg=0		map.mc(3) = ymc	map.mc(2) = xmc	map.mc(1) = 0	map.mc(0) = 0	xsize = 7000	ysize = 4000	print, pos, fids, outname, dims, pixelsize, map	MOSAIC_DOIT, fid=fids, pos=pos, out_name=outname, dims=dims, $		xsize=xs, ysize=ys,x0=x0, y0=y0, /georef, out_dt=data_type, $		map_info=map, pixel_size=pixelsize, background=bg, r_fid=rfid, $		see_through_val = [0l], use_see_through=[1l]endpro batchMosaic		scenes=findfile('*')	cd, current=masterDIR		print, scenes	fids = 0l	envistart		for i=0, n_elements(scenes)-1 do begin		current=strtok(scenes(i),':', /extract)		if (strtok(scenes(i), '.'))(0) eq 0 then begin			cd, current(0)			print, ' ', string(byte(13))			print, '**************************',current(0),'**************************'						if file_test('resizedSand') then begin				envi_open_file, 'resizedSand', r_fid=curid				if curid ne -1 then $					fids = [fids,curid]			endif						cd, masterDIR		endif	endfor		fids = fids(1:n_elements(fids)-1)		mosaickThese, fids	envi_exitend