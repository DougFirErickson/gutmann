;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Gets envi header info (map and ns, nl, nb, type, interleave);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;function getImageInfo, name	      envi_open_file, name, r_fid=id     if id eq -1 then return, -1     	envi_file_query, id, ns=ns, nl=nl, nb=nb, h_map=maph,	$		interleave=interleave, data_type=type, descrip=desc	handle_value, maph, mapinfo		envi_file_mng, id=id, /remove		return, {fileInfo, ns:ns, nl:nl, nb:nb, map:mapinfo,		$			interleave:interleave, type:type, desc:desc}endpro setHdr, info, fname	envi_setup_head, fname=fname, ns=info.ns, nl=info.nl, nb=info.nb, $		interleave=info.interleave, data_type=info.type, $		descrip=info.desc, map_info=info.map, /writeend	pro combinemasks, mask1, mask2, out	m1info=getImageInfo(mask1)	m2info=getImageInfo(mask2)	openr, un1, mask1, /get	openr, un2, mask2, /get	openw, oun, out, /get		m1=bytarr(m1info.ns)	m2=bytarr(m2info.ns)	n=bytarr(m1info.ns)	for i=1, m2info.nl do begin		readu, un1, m1		readu, un2, m2		index=where(m1 eq 1 and m2 eq 1)		if index(0) ne -1 then n(index) = 1		writeu, oun, n		n(*)=0	endfor	close, oun, un1, un2 & free_lun, oun, un1, un2;	print, m1info;	print, out	setHdr, m1info, outend