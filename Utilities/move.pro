;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	Moderately useful function to move a file named in;;	to a file named out.  ;;;;	returns -1 on error, returns 0 on proper exit;;;;	NOTE : it is much faster to do this via the OS ;;	which can rename a file, but this routine is;;	portable to any OS;;;;	ALSO : if the keyword copy is not set it will delete;;	the original file after copying every singe byte.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;function move, in, out, copy=copy, safe=safe	if n_elements(out) eq 0 then begin		print, 'MOVE ERROR: both input and output files must be specified'		return, -1	endif		if not file_test(in) then begin		print, in, ' DOES NOT EXIST!'		return, -1	endif	if keyword_set(safe) then $		if file_test(out) then begin			print, out, ' ALREADY EXISTS... oh well'			return, -1		endif				openr, un, /get, in	openw, oun, /get, out		f=fstat(un)	if f.size gt 10000000 then begin		input=bytarr(10000000)		while f.size - f.cur_ptr gt 10000000 do begin			readu, un, input			writeu, oun, input			f=fstat(un)		endwhile	endif	input=bytarr(f.size-f.cur_ptr)	readu, un, input	writeu, oun, input		close, oun, un	free_lun, oun, un		if not keyword_set(copy) then $		file_delete, in	return, 0end